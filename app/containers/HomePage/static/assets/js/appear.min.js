/*
 * jQuery.appear
 * https://github.com/bas2k/jquery.appear/
 * http://code.google.com/p/jquery-appear/
 * http://bas2k.ru/
 *
 * Copyright (c) 2009 Michael Hixson
 * Copyright (c) 2012-2014 Alexander Brovikov
 * Licensed under the MIT license (http://www.opensource.org/licenses/mit-license.php)
 */

(function(e) {
  e.fn.appear = function(t, n) {
    const r = e.extend({ data: undefined, one: true, accX: 0, accY: 0 }, n);
    return this.each(function() {
      const n = e(this);
      n.appeared = false;
      if (!t) {
        n.trigger('appear', r.data);
        return;
      }
      const i = e(window);
      const s = function() {
        if (!n.is(':visible')) {
          n.appeared = false;
          return;
        }
        const e = i.scrollLeft();
        const t = i.scrollTop();
        const s = n.offset();
        const o = s.left;
        const u = s.top;
        const a = r.accX;
        const f = r.accY;
        const l = n.height();
        const c = i.height();
        const h = n.width();
        const p = i.width();
        if (
          u + l + f >= t &&
          u <= t + c + f &&
          o + h + a >= e &&
          o <= e + p + a
        ) {
          if (!n.appeared) n.trigger('appear', r.data);
        } else {
          n.appeared = false;
        }
      };
      const o = function() {
        n.appeared = true;
        if (r.one) {
          i.unbind('scroll', s);
          const o = e.inArray(s, e.fn.appear.checks);
          if (o >= 0) e.fn.appear.checks.splice(o, 1);
        }
        t.apply(this, arguments);
      };
      if (r.one) n.one('appear', r.data, o);
      else n.bind('appear', r.data, o);
      i.scroll(s);
      e.fn.appear.checks.push(s);
      s();
    });
  };
  e.extend(e.fn.appear, {
    checks: [],
    timeout: null,
    checkAll() {
      let t = e.fn.appear.checks.length;
      if (t > 0) while (t--) e.fn.appear.checks[t]();
    },
    run() {
      if (e.fn.appear.timeout) clearTimeout(e.fn.appear.timeout);
      e.fn.appear.timeout = setTimeout(e.fn.appear.checkAll, 20);
    },
  });
  e.each(
    [
      'append',
      'prepend',
      'after',
      'before',
      'attr',
      'removeAttr',
      'addClass',
      'removeClass',
      'toggleClass',
      'remove',
      'css',
      'show',
      'hide',
    ],
    (t, n) => {
      const r = e.fn[n];
      if (r) {
        e.fn[n] = function() {
          const t = r.apply(this, arguments);
          e.fn.appear.run();
          return t;
        };
      }
    },
  );
})(jQuery);
